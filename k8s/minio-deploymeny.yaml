# minio service
kind: Service
apiVersion: v1
metadata:
  name: p2-minio
spec:
  selector:
    app: p2-minio
  ports:
  - protocol: TCP
    port: 80
    targetPort: 9000
---
# Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: p2-pv-claim
  labels:
    app: db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
# ---
# # Persistent Volume
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#    name: p2-pv
# spec:
#   capacity:
#     storage: 1Gi
#   volumeMode: Filesystem
#   accessModes:
#   - ReadWriteOnce
#   persistentVolumeReclaimPolicy: Retain
#   persistentVolumeClaim:
#     claimName: p2-pv-claim
#   storageClassName: local-storage
#   local:
#     #  might need to change this
#     path: /minio-volume/test
---
# Deployment
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: p2-minio
spec:
  selector:
    matchLabels:
      app: p2-minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        # Label is used as selector in the service.
        app: p2-minio
    spec:
      containers:
      - name: minio
        # Pulls the default Minio image from Docker Hub
        image: minio/minio:latest
        args:
        - server
        - /storage
        env:
        # Change this to secret
        - name: MINIO_ACCESS_KEY
          value: "minio"
        - name: MINIO_SECRET_KEY
          value: "minio123"
        ports:
        - containerPort: 9000
          hostPort: 9000
        # Mount the volume into the pod
        volumeMounts:
        - name: p2-vc # must match the volume name, above
          mountPath: "/storage"
      volumes:
      - name: p2-vc
        persistentVolumeClaim:
          claimName: p2-pv-claim
